Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PARAM expression
Rule 2     statement -> KEY expression
Rule 3     statement -> KEY
Rule 4     statement -> NAME EQUALS expression
Rule 5     statement -> expression
Rule 6     expression -> expression PLUS expression
Rule 7     expression -> expression MINUS expression
Rule 8     expression -> expression TIMES expression
Rule 9     expression -> expression DIVIDE expression
Rule 10    expression -> expression EXP expression
Rule 11    expression -> MINUS expression
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    expression -> NUMBER
Rule 14    expression -> NAME
Rule 15    expression -> STRING

Terminals, with rules where they appear

DIVIDE               : 9
EQUALS               : 4
EXP                  : 10
KEY                  : 2 3
LPAREN               : 12
MINUS                : 7 11
NAME                 : 4 14
NUMBER               : 13
PARAM                : 1
PLUS                 : 6
RPAREN               : 12
STRING               : 15
TIMES                : 8
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 4 5 6 6 7 7 8 8 9 9 10 10 11 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PARAM expression
    (2) statement -> . KEY expression
    (3) statement -> . KEY
    (4) statement -> . NAME EQUALS expression
    (5) statement -> . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    PARAM           shift and go to state 3
    KEY             shift and go to state 8
    NAME            shift and go to state 6
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    STRING          shift and go to state 1

    expression                     shift and go to state 7
    statement                      shift and go to state 9

state 1

    (15) expression -> STRING .

    PLUS            reduce using rule 15 (expression -> STRING .)
    MINUS           reduce using rule 15 (expression -> STRING .)
    TIMES           reduce using rule 15 (expression -> STRING .)
    DIVIDE          reduce using rule 15 (expression -> STRING .)
    EXP             reduce using rule 15 (expression -> STRING .)
    $end            reduce using rule 15 (expression -> STRING .)
    RPAREN          reduce using rule 15 (expression -> STRING .)


state 2

    (11) expression -> MINUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 10

state 3

    (1) statement -> PARAM . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 12

state 4

    (12) expression -> LPAREN . expression RPAREN
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 13

state 5

    (13) expression -> NUMBER .

    PLUS            reduce using rule 13 (expression -> NUMBER .)
    MINUS           reduce using rule 13 (expression -> NUMBER .)
    TIMES           reduce using rule 13 (expression -> NUMBER .)
    DIVIDE          reduce using rule 13 (expression -> NUMBER .)
    EXP             reduce using rule 13 (expression -> NUMBER .)
    $end            reduce using rule 13 (expression -> NUMBER .)
    RPAREN          reduce using rule 13 (expression -> NUMBER .)


state 6

    (4) statement -> NAME . EQUALS expression
    (14) expression -> NAME .

    EQUALS          shift and go to state 14
    PLUS            reduce using rule 14 (expression -> NAME .)
    MINUS           reduce using rule 14 (expression -> NAME .)
    TIMES           reduce using rule 14 (expression -> NAME .)
    DIVIDE          reduce using rule 14 (expression -> NAME .)
    EXP             reduce using rule 14 (expression -> NAME .)
    $end            reduce using rule 14 (expression -> NAME .)


state 7

    (5) statement -> expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    $end            reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19


state 8

    (2) statement -> KEY . expression
    (3) statement -> KEY .
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    $end            reduce using rule 3 (statement -> KEY .)
    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 20

state 9

    (0) S' -> statement .



state 10

    (11) expression -> MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    PLUS            reduce using rule 11 (expression -> MINUS expression .)
    MINUS           reduce using rule 11 (expression -> MINUS expression .)
    TIMES           reduce using rule 11 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 11 (expression -> MINUS expression .)
    EXP             reduce using rule 11 (expression -> MINUS expression .)
    $end            reduce using rule 11 (expression -> MINUS expression .)
    RPAREN          reduce using rule 11 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 18 ]
  ! EXP             [ shift and go to state 19 ]


state 11

    (14) expression -> NAME .

    PLUS            reduce using rule 14 (expression -> NAME .)
    MINUS           reduce using rule 14 (expression -> NAME .)
    TIMES           reduce using rule 14 (expression -> NAME .)
    DIVIDE          reduce using rule 14 (expression -> NAME .)
    EXP             reduce using rule 14 (expression -> NAME .)
    $end            reduce using rule 14 (expression -> NAME .)
    RPAREN          reduce using rule 14 (expression -> NAME .)


state 12

    (1) statement -> PARAM expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    $end            reduce using rule 1 (statement -> PARAM expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19


state 13

    (12) expression -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    RPAREN          shift and go to state 21
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19


state 14

    (4) statement -> NAME EQUALS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 22

state 15

    (6) expression -> expression PLUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 23

state 16

    (7) expression -> expression MINUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 24

state 17

    (8) expression -> expression TIMES . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 25

state 18

    (9) expression -> expression DIVIDE . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 26

state 19

    (10) expression -> expression EXP . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression EXP expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . NAME
    (15) expression -> . STRING

    MINUS           shift and go to state 2
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 5
    NAME            shift and go to state 11
    STRING          shift and go to state 1

    expression                     shift and go to state 27

state 20

    (2) statement -> KEY expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    $end            reduce using rule 2 (statement -> KEY expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19


state 21

    (12) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)


state 22

    (4) statement -> NAME EQUALS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    $end            reduce using rule 4 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19


state 23

    (6) expression -> expression PLUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    PLUS            reduce using rule 6 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 6 (expression -> expression PLUS expression .)
    $end            reduce using rule 6 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19

  ! TIMES           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 24

    (7) expression -> expression MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    PLUS            reduce using rule 7 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 7 (expression -> expression MINUS expression .)
    $end            reduce using rule 7 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 18
    EXP             shift and go to state 19

  ! TIMES           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 25

    (8) expression -> expression TIMES expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    PLUS            reduce using rule 8 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 8 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 8 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 8 (expression -> expression TIMES expression .)
    $end            reduce using rule 8 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 8 (expression -> expression TIMES expression .)
    EXP             shift and go to state 19

  ! EXP             [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 18 ]


state 26

    (9) expression -> expression DIVIDE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    PLUS            reduce using rule 9 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 9 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 9 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 9 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 9 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 9 (expression -> expression DIVIDE expression .)
    EXP             shift and go to state 19

  ! EXP             [ reduce using rule 9 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 18 ]


state 27

    (10) expression -> expression EXP expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . EXP expression

    PLUS            reduce using rule 10 (expression -> expression EXP expression .)
    MINUS           reduce using rule 10 (expression -> expression EXP expression .)
    TIMES           reduce using rule 10 (expression -> expression EXP expression .)
    DIVIDE          reduce using rule 10 (expression -> expression EXP expression .)
    EXP             reduce using rule 10 (expression -> expression EXP expression .)
    $end            reduce using rule 10 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 10 (expression -> expression EXP expression .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 18 ]
  ! EXP             [ shift and go to state 19 ]

