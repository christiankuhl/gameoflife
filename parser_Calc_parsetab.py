
# parser_Calc_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftEXPrightUMINUSNAME NUMBER PLUS MINUS EXP TIMES DIVIDE EQUALS LPAREN RPARENstatement : NAME EQUALS expressionstatement : expression\n        expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXP expression\n        expression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'$end':([2,4,5,6,7,8,16,17,18,19,20,21,22,],[-11,0,-10,-2,-11,-8,-1,-9,-4,-6,-3,-7,-5,]),'MINUS':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,],[1,1,-11,1,-10,11,-11,-8,1,11,1,1,1,1,1,11,-9,-4,-6,-3,-7,-5,]),'DIVIDE':([2,5,6,7,8,10,16,17,18,19,20,21,22,],[-11,-10,12,-11,-8,12,12,-9,12,-6,12,-7,-5,]),'PLUS':([2,5,6,7,8,10,16,17,18,19,20,21,22,],[-11,-10,13,-11,-8,13,13,-9,-4,-6,-3,-7,-5,]),'RPAREN':([5,7,8,10,17,18,19,20,21,22,],[-10,-11,-8,17,-9,-4,-6,-3,-7,-5,]),'EQUALS':([2,],[9,]),'EXP':([2,5,6,7,8,10,16,17,18,19,20,21,22,],[-11,-10,14,-11,-8,14,14,-9,14,14,14,-7,14,]),'LPAREN':([0,1,3,9,11,12,13,14,15,],[3,3,3,3,3,3,3,3,3,]),'NAME':([0,1,3,9,11,12,13,14,15,],[2,7,7,7,7,7,7,7,7,]),'NUMBER':([0,1,3,9,11,12,13,14,15,],[5,5,5,5,5,5,5,5,5,]),'TIMES':([2,5,6,7,8,10,16,17,18,19,20,21,22,],[-11,-10,15,-11,-8,15,15,-9,15,-6,15,-7,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,3,9,11,12,13,14,15,],[6,8,10,16,18,19,20,21,22,]),'statement':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','parser.py',128),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',132),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',137),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',138),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',139),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',140),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','parser.py',141),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',156),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',160),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',164),
  ('expression -> NAME','expression',1,'p_expression_name','parser.py',168),
]
